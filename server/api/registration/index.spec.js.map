{"version":3,"sources":["../../../../server/api/registration/index.spec.js"],"names":["proxyquire","require","noPreserveCache","registrationCtrlStub","index","show","create","update","destroy","routerStub","get","sinon","spy","put","patch","post","delete","registrationIndex","Router","describe","it","expect","to","equal","withArgs","have","been","calledOnce"],"mappings":"AAAA;;AAEA,IAAIA,aAAaC,QAAQ,YAAR,EAAsBC,eAAtB,EAAjB;;AAEA,IAAIC,uBAAuB;AACzBC,SAAO,wBADkB;AAEzBC,QAAM,uBAFmB;AAGzBC,UAAQ,yBAHiB;AAIzBC,UAAQ,yBAJiB;AAKzBC,WAAS;AALgB,CAA3B;;AAQA,IAAIC,aAAa;AACfC,OAAKC,MAAMC,GAAN,EADU;AAEfC,OAAKF,MAAMC,GAAN,EAFU;AAGfE,SAAOH,MAAMC,GAAN,EAHQ;AAIfG,QAAMJ,MAAMC,GAAN,EAJS;AAKfI,UAAQL,MAAMC,GAAN;AALO,CAAjB;;AAQA;AACA,IAAIK,oBAAoBjB,WAAW,YAAX,EAAyB;AAC/C,aAAW;AACTkB,YAAQ,kBAAW;AACjB,aAAOT,UAAP;AACD;AAHQ,GADoC;AAM/C,+BAA6BN;AANkB,CAAzB,CAAxB;;AASAgB,SAAS,0BAAT,EAAqC,YAAW;;AAE9CC,KAAG,0CAAH,EAA+C,YAAW;AACxDC,WAAOJ,iBAAP,EAA0BK,EAA1B,CAA6BC,KAA7B,CAAmCd,UAAnC;AACD,GAFD;;AAIAU,WAAS,wBAAT,EAAmC,YAAW;;AAE5CC,OAAG,+CAAH,EAAoD,YAAW;AAC7DC,aAAOZ,WAAWC,GAAX,CACJc,QADI,CACK,GADL,EACU,wBADV,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,4BAAT,EAAuC,YAAW;;AAEhDC,OAAG,8CAAH,EAAmD,YAAW;AAC5DC,aAAOZ,WAAWC,GAAX,CACJc,QADI,CACK,MADL,EACa,uBADb,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,yBAAT,EAAoC,YAAW;;AAE7CC,OAAG,gDAAH,EAAqD,YAAW;AAC9DC,aAAOZ,WAAWM,IAAX,CACJS,QADI,CACK,GADL,EACU,yBADV,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,4BAAT,EAAuC,YAAW;;AAEhDC,OAAG,gDAAH,EAAqD,YAAW;AAC9DC,aAAOZ,WAAWI,GAAX,CACJW,QADI,CACK,MADL,EACa,yBADb,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,8BAAT,EAAyC,YAAW;;AAElDC,OAAG,gDAAH,EAAqD,YAAW;AAC9DC,aAAOZ,WAAWK,KAAX,CACJU,QADI,CACK,MADL,EACa,yBADb,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,+BAAT,EAA0C,YAAW;;AAEnDC,OAAG,iDAAH,EAAsD,YAAW;AAC/DC,aAAOZ,WAAWO,MAAX,CACJQ,QADI,CACK,MADL,EACa,0BADb,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;AAUD,CAlED","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar registrationCtrlStub = {\n  index: 'registrationCtrl.index',\n  show: 'registrationCtrl.show',\n  create: 'registrationCtrl.create',\n  update: 'registrationCtrl.update',\n  destroy: 'registrationCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar registrationIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './registration.controller': registrationCtrlStub\n});\n\ndescribe('Registration API Router:', function() {\n\n  it('should return an express router instance', function() {\n    expect(registrationIndex).to.equal(routerStub);\n  });\n\n  describe('GET /api/registrations', function() {\n\n    it('should route to registration.controller.index', function() {\n      expect(routerStub.get\n        .withArgs('/', 'registrationCtrl.index')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/registrations/:id', function() {\n\n    it('should route to registration.controller.show', function() {\n      expect(routerStub.get\n        .withArgs('/:id', 'registrationCtrl.show')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/registrations', function() {\n\n    it('should route to registration.controller.create', function() {\n      expect(routerStub.post\n        .withArgs('/', 'registrationCtrl.create')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/registrations/:id', function() {\n\n    it('should route to registration.controller.update', function() {\n      expect(routerStub.put\n        .withArgs('/:id', 'registrationCtrl.update')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH /api/registrations/:id', function() {\n\n    it('should route to registration.controller.update', function() {\n      expect(routerStub.patch\n        .withArgs('/:id', 'registrationCtrl.update')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/registrations/:id', function() {\n\n    it('should route to registration.controller.destroy', function() {\n      expect(routerStub.delete\n        .withArgs('/:id', 'registrationCtrl.destroy')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}