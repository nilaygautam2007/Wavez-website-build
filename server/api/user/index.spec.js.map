{"version":3,"sources":["../../../../server/api/user/index.spec.js"],"names":["proxyquire","require","noPreserveCache","userCtrlStub","index","destroy","me","changePassword","show","create","authServiceStub","isAuthenticated","hasRole","role","routerStub","get","sinon","spy","put","post","delete","userIndex","Router","describe","it","expect","to","equal","withArgs","have","been","calledOnce"],"mappings":"AAAA;;AAEA,IAAIA,aAAaC,QAAQ,YAAR,EAAsBC,eAAtB,EAAjB;;AAEA,IAAIC,eAAe;AACjBC,SAAO,gBADU;AAEjBC,WAAS,kBAFQ;AAGjBC,MAAI,aAHa;AAIjBC,kBAAgB,yBAJC;AAKjBC,QAAM,eALW;AAMjBC,UAAQ;AANS,CAAnB;;AASA,IAAIC,kBAAkB;AACpBC,iBADoB,6BACF;AAChB,WAAO,6BAAP;AACD,GAHmB;AAIpBC,SAJoB,mBAIZC,IAJY,EAIN;AACZ,WAAO,yBAAyBA,IAAhC;AACD;AANmB,CAAtB;;AASA,IAAIC,aAAa;AACfC,OAAKC,MAAMC,GAAN,EADU;AAEfC,OAAKF,MAAMC,GAAN,EAFU;AAGfE,QAAMH,MAAMC,GAAN,EAHS;AAIfG,UAAQJ,MAAMC,GAAN;AAJO,CAAjB;;AAOA;AACA,IAAII,YAAYrB,WAAW,SAAX,EAAsB;AACpC,aAAW;AACTsB,UADS,oBACA;AACP,aAAOR,UAAP;AACD;AAHQ,GADyB;AAMpC,uBAAqBX,YANe;AAOpC,6BAA2BO;AAPS,CAAtB,CAAhB;;AAUAa,SAAS,kBAAT,EAA6B,YAAW;;AAEtCC,KAAG,0CAAH,EAA+C,YAAW;AACxDC,WAAOJ,SAAP,EAAkBK,EAAlB,CAAqBC,KAArB,CAA2Bb,UAA3B;AACD,GAFD;;AAIAS,WAAS,gBAAT,EAA2B,YAAW;;AAEpCC,OAAG,6DAAH,EAAkE,YAAW;AAC3EC,aAAOX,WAAWC,GAAX,CACJa,QADI,CACK,GADL,EACU,2BADV,EACuC,gBADvC,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,uBAAT,EAAkC,YAAW;;AAE3CC,OAAG,+DAAH,EAAoE,YAAW;AAC7EC,aAAOX,WAAWM,MAAX,CACJQ,QADI,CACK,MADL,EACa,2BADb,EAC0C,kBAD1C,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,mBAAT,EAA8B,YAAW;;AAEvCC,OAAG,yDAAH,EAA8D,YAAW;AACvEC,aAAOX,WAAWC,GAAX,CACJa,QADI,CACK,KADL,EACY,6BADZ,EAC2C,aAD3C,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,6BAAT,EAAwC,YAAW;;AAEjDC,OAAG,qEAAH,EAA0E,YAAW;AACnFC,aAAOX,WAAWI,GAAX,CACJU,QADI,CACK,eADL,EACsB,6BADtB,EACqD,yBADrD,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,oBAAT,EAA+B,YAAW;;AAExCC,OAAG,2DAAH,EAAgE,YAAW;AACzEC,aAAOX,WAAWC,GAAX,CACJa,QADI,CACK,MADL,EACa,6BADb,EAC4C,eAD5C,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,iBAAT,EAA4B,YAAW;;AAErCC,OAAG,wCAAH,EAA6C,YAAW;AACtDC,aAAOX,WAAWK,IAAX,CACJS,QADI,CACK,GADL,EACU,iBADV,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;AAUD,CAlED","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar userCtrlStub = {\n  index: 'userCtrl.index',\n  destroy: 'userCtrl.destroy',\n  me: 'userCtrl.me',\n  changePassword: 'userCtrl.changePassword',\n  show: 'userCtrl.show',\n  create: 'userCtrl.create'\n};\n\nvar authServiceStub = {\n  isAuthenticated() {\n    return 'authService.isAuthenticated';\n  },\n  hasRole(role) {\n    return 'authService.hasRole.' + role;\n  }\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar userIndex = proxyquire('./index', {\n  'express': {\n    Router() {\n      return routerStub;\n    }\n  },\n  './user.controller': userCtrlStub,\n  '../../auth/auth.service': authServiceStub\n});\n\ndescribe('User API Router:', function() {\n\n  it('should return an express router instance', function() {\n    expect(userIndex).to.equal(routerStub);\n  });\n\n  describe('GET /api/users', function() {\n\n    it('should verify admin role and route to user.controller.index', function() {\n      expect(routerStub.get\n        .withArgs('/', 'authService.hasRole.admin', 'userCtrl.index')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/users/:id', function() {\n\n    it('should verify admin role and route to user.controller.destroy', function() {\n      expect(routerStub.delete\n        .withArgs('/:id', 'authService.hasRole.admin', 'userCtrl.destroy')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/users/me', function() {\n\n    it('should be authenticated and route to user.controller.me', function() {\n      expect(routerStub.get\n        .withArgs('/me', 'authService.isAuthenticated', 'userCtrl.me')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/users/:id/password', function() {\n\n    it('should be authenticated and route to user.controller.changePassword', function() {\n      expect(routerStub.put\n        .withArgs('/:id/password', 'authService.isAuthenticated', 'userCtrl.changePassword')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/users/:id', function() {\n\n    it('should be authenticated and route to user.controller.show', function() {\n      expect(routerStub.get\n        .withArgs('/:id', 'authService.isAuthenticated', 'userCtrl.show')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/users', function() {\n\n    it('should route to user.controller.create', function() {\n      expect(routerStub.post\n        .withArgs('/', 'userCtrl.create')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}